export namespace Module {
    import print = print;
    export { print };
    export const printErr: any;
    export const read: any;
    export const arguments: any;
    export const load: any;
    import Jb = printErr;
    export { Jb };
    export { Ib as ccall };
    export function cwrap(r: any, e: any, i: any): (...args: any[]) => any;
    export { Ub as setValue };
    export function getValue(r: any, e: any): any;
    export const ALLOC_NORMAL: number;
    export { Xb as ALLOC_STACK };
    export { I as ALLOC_STATIC };
    export { N as allocate };
    export { Tb as Pointer_stringify };
    export function Array_stringify(r: any): string;
    export { aa as HEAP };
    export { z as HEAP8 };
    export { hb as HEAP16 };
    export { A as HEAP32 };
    export { B as HEAPU8 };
    export { C as HEAPU16 };
    export { E as HEAPU32 };
    export { ib as HEAPF32 };
    export { lb as HEAPF64 };
    export { uc as Array_copy };
    export function TypedArray_copy(r: any, e: any, i: any): ArrayBufferLike;
    export { vc as String_len };
    export { wc as String_copy };
    export { gc as intArrayFromString };
    export function intArrayToString(r: any): string;
    export { Pb as writeStringToMemory };
    export { Qb as writeArrayToMemory };
    export function _crn_get_width(r: any, e: any): any;
    export function _crn_get_height(r: any, e: any): any;
    export function _crn_get_levels(r: any, e: any): any;
    export function _crn_get_dxt_format(r: any, e: any): any;
    export function _crn_get_uncompressed_size(r: any, e: any): number;
    export function _crn_decompress(r: any, e: any, i: any, a: any): void;
    export { Yb as _malloc };
    export { Xd as _free };
    export function $a(r: any): any;
    export { $b as FUNCTION_TABLE };
    export { Ie as run };
}
declare function Ib(a: any, c: any, d: any, f: any): any;
declare function Ub(r: any, e: any, i: any): void;
declare var Xb: number;
declare var I: number;
declare function N(e: any, i: any, a: any): any;
declare function Tb(r: any, e: any): string;
declare var aa: any;
declare var z: any;
declare var hb: any;
declare var A: any;
declare var B: any;
declare var C: any;
declare var E: any;
declare var ib: any;
declare var lb: any;
declare function uc(r: any, e: any): any;
declare function vc(r: any): number;
declare function wc(r: any, e: any): any;
declare function gc(r: any, e: any, i: any): any[];
declare function Pb(r: any, e: any, i: any): void;
declare function Qb(r: any, e: any): void;
declare function Yb(r: any): any;
declare namespace Yb {
    const X: number;
}
declare function Xd(r: any): void;
declare namespace Xd {
    const X_1: number;
    export { X_1 as X };
}
declare var $b: any;
declare function Ie(r: any): any;
export {};
